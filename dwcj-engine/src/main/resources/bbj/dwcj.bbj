use org.dwcj.Environment

use ::admin.bbj::Admin
use ::admin.bbj::UserCredentials
use java.io.StringWriter
use java.io.PrintWriter

SETESC EscTrap
SETERR dwcj_error

BBJAPI().getConfig().releaseOnLostConnection(0)

DEBUG = 0
DEBUG=NUM(STBL("DEBUG",err=*next),err=*next)

dummy$=STBL("!OPTIONS","ERROR_UNWINDS=true")


class$=""

rem evaluate arguments
for i=1 to 10
    tmp$=argv(i,err=*break)
    if cvs(tmp$,4)="DEBUG" then
        DEBUG=1
        continue
    fi
    if len(tmp$)>6 and tmp$(1,6)="class=" then
        class$=tmp$(7)
        continue
    fi
next

if class$="" then
    class$=STBL("DWCJCLASSNAME",err=*next)
fi

if class$="" then
    class$=clientenv("class",err=*next)
fi

if class$="" then
    class$="org.dwcj.util.WelcomeApp"
    gosub determineClasspathEntries
fi

h! = new ::DwcjHelper.bbj::DwcjHelper() 
Environment.init(BBjAPI(), h!)

Class.forName(class$,err=class_not_found)
app! = eval("new "+class$+"()",err=dwcj_error)

process_events,err=dwcj_error

terminate:
    release
    

determineClasspathEntries:
        admin! = new Admin()
        userCredentials! = admin!.getUserCredentials()
        if (userCredentials! <> null()) then
            Api! = BBjAdminFactory.getBBjAdmin(userCredentials!.getUser(),userCredentials!.getPassword())
        endif
        if (Api! = null()) then
            a=msgbox( "Could not access application server")
            release
        endif
        cp$ = BBjAPI().getConfig().getCurrentCommandLineObject().getOriginalClasspathName()
        cp! = Api!.getClasspath(cp$)
        
        al! = new java.util.ArrayList()
        it!=cp!.iterator()
        while it!.hasNext()
            c$ = it!.next()
            if c$(1,1)="(" or pos("lib/dwcj-" =c$)>0 then
                continue
            fi
            al!.add(c$)
        wend
        
        BBjAPI().getObjectTable().put("dwcjcp",al!)
return


EscTrap:
    IF AND(CHR(TCB(19)),$08$)=$08$ THEN
        System.out.println("Client Died")
    ELSE
        System.out.println("ESCAPE")
    FI
    if app! <> null() then
        app!.cleanup()
    fi
RELEASE

ErrTrap:
    System.out.println("Error Caught: "+str(err)+" "+errmes(-1))
    if app! <> null() then
        app!.cleanup()
    fi
RELEASE

class_not_found:
    if DEBUG=0 then
        a=msgbox("Class not found!",64,"Error")
    else
        a=msgbox("Class "+class$+" not found!",64,"Error")
    fi
release

dwcj_error:
    if DEBUG=0 then
        a=msgbox("An error has occured!",48,"Error")
    else
        error$ = ""
        e! = bbjapi().getLastJavaException()
        sg! = BBjAPI().openSysGui("X0")
        error$ = str(e!.getMessage()) + "\n"

        st! = e!.getStackTrace()
        sw! = new StringWriter()
        pw! = new PrintWriter(sw!)
        e!.printStackTrace(pw!)
        script!= "console.log('%cExpcetion caught:', 'background: black; color:white; font-size: 13px;');"
        script!= script! + "console.log(`%c" + sw!.toString() + "`, 'color:#ff564d;font-size: 12px;');"

        sg!.executeScript(script!)

        rem sg!.executeScript("console.log('Error Details:');")
        rem sg!.executeScript("console.log ('"+str(e!.getMessage())+"');")

        rem a=msgbox("An error has occured! Find debug information in the browser console.",48,"Error")
    fi
release

package com.webforj.router;

import com.webforj.component.Component;
import com.webforj.router.RouteScanner.RouteEntry;
import com.webforj.router.annotation.Route;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.*;
// import io.github.classgraph.test.accepted.Cls;


class RouteScannerTest {

  @Test
  void shouldScanAndRegisterRoutes() {
  List<RouteEntry> entires = RouteScanner.scanForRoutes("com.webforj.router");

  assertEquals(3, entires.size());
  }

  // /**
  // * Test that the scanner generates view names for routes with AUTO_GENERATED_VIEW_NAME.
  // */
  // @Test
  // void shouldGenerateViewNameForAutoGeneratedViewName() {
  // RouteRegistry mockRegistry = mock(RouteRegistry.class);
  // String basePackage = "com.webforj.router.testcomponents";

  // // Assuming ViewNameGenerator generates "testComponentView" for TestComponent.class
  // String expectedViewName = "testComponentView";
  // RouteScanner.scanAndRegisterRoutes(mockRegistry, basePackage);

  // verify(mockRegistry).register(eq(expectedViewName), eq(TestComponent.class), any(),
  // anyString());
  // }

  // /**
  // * Test that routes are sorted by priority before registration.
  // */
  // @Test
  // void shouldSortRoutesByPriority() {
  // RouteRegistry mockRegistry = mock(RouteRegistry.class);
  // String basePackage = "com.webforj.router.testcomponents";

  // // Mock the sorting behavior by priority
  // List<RouteScanner.RouteEntry> routes = new ArrayList<>();
  // routes.add(
  // new RouteScanner.RouteEntry("/low-priority", LowPriorityComponent.class, null, null, 1));
  // routes.add(
  // new RouteScanner.RouteEntry("/high-priority", HighPriorityComponent.class, null, null, 10));

  // // Simulate scan result
  // RouteScanner.scanAndRegisterRoutes(mockRegistry, basePackage);

  // // Verify that higher priority routes are registered first
  // verify(mockRegistry).register("/high-priority", HighPriorityComponent.class, null, null);
  // verify(mockRegistry).register("/low-priority", LowPriorityComponent.class, null, null);
  // }

  // /**
  // * Test that the scanner handles classes without the Route annotation gracefully.
  // */
  // @Test
  // void shouldHandleClassesWithoutRouteAnnotation() {
  // RouteRegistry mockRegistry = mock(RouteRegistry.class);
  // String basePackage = "com.webforj.router.invalidcomponents";

  // RouteScanner.scanAndRegisterRoutes(mockRegistry, basePackage);

  // // Verify that no routes are registered if there are no valid @Route annotations
  // verify(mockRegistry, never()).register(anyString(), any(), any(), anyString());
  // }

  // /**
  // * Test that the scanner throws an exception when scanning fails.
  // */
  // @Test
  // void shouldThrowExceptionWhenScanningFails() {
  // RouteRegistry mockRegistry = mock(RouteRegistry.class);
  // String invalidBasePackage = "invalid.package";

  // // Expect an exception due to invalid package
  // assertThrows(RouteScanner.RouteScanException.class,
  // () -> RouteScanner.scanAndRegisterRoutes(mockRegistry, invalidBasePackage));
  // }
}
